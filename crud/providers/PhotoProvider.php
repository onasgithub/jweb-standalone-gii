<?php

/**
 * Created by PhpStorm.
 * User: tobias
 * Date: 14.03.14
 * Time: 10:21
 */

namespace jweb\gii\crud\providers;

use yii\db\ColumnSchema;

class PhotoProvider extends \jweb\gii\base\Provider {

    public function activeField(ColumnSchema $attribute) {
        if (!isset($this->generator->getTableSchema()->columns[$attribute->name])) {
            return null;
        }
        $column = $this->generator->getTableSchema()->columns[$attribute->name];
        switch (true) {
            case (in_array($column->name, $this->columnNames)):
                return "
\$form->field(\$model, '{$attribute->name}')->widget(
    \kartik\widgets\FileInput::classname(), 
    [
      'pluginOptions' => [
          'accept' => 'image/*', 
          'showUpload' => false, 
          'initialPreview' => [Html::img(\$model->getPhoto([50,50]))]
       ]
    ]
)
";
            default:
                return null;
        }
    }

    /**
     * Formatter for detail view relation attributes
     *
     * Renders a link to the related detail view
     *
     * @param $column ColumnSchema
     *
     * @return null|string
     */
    public function attributeFormat($column) {
        # handle columns with a primary key, to create links in pivot tables (changed at 0.3-dev; 03.02.2015)
        # TODO double check with primary keys not named `id` of non-pivot tables
        # TODO Note: condition does not apply in every case

     if (in_array($column->name, $this->columnNames)) {
            $method = __METHOD__;
            $code = <<<EOS
// generated by {$method}
[
    'format'=>'html',
    'attribute'=>'$column->name',
    'value' => Html::img(\$model->getPhoto([50,50])),
]
EOS;
            return $code;
        }
    }

    /**
     * Formatter for relation grid columns
     *
     * Renders a link to the related detail view
     *
     * @param $column ColumnSchema
     * @param $model ActiveRecord
     *
     * @return null|string
     */
    public function columnFormat($column, $model) {
       if (in_array($column->name, $this->columnNames)) {
            $method = __METHOD__;
            $code = <<<EOS
// generated by {$method}
[
            "class" => yii\\grid\\DataColumn::className(),
            "attribute" => "{$column->name}",
            "value" => function(\$model){
             return  '<img src="'.\$model->getPhoto([50,50]).'" />';
            },
            "format" => "raw",
]
EOS;
            return $code;
        }
    }

}
